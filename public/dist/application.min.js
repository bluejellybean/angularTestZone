"use strict";var ApplicationConfiguration=function(){var applicationModuleName="alexblog",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("incrementalgame"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Menus",function($scope,Authentication,Menus){$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController"),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("incrementalgame").config(["$stateProvider",function($stateProvider){$stateProvider.state("incrementalgame",{url:"/incrementalgame",controller:"IncrementalgameController as click",templateUrl:"modules/incrementalgame/views/incrementalgame.client.view.html"})}]),angular.module("incrementalgame").controller("GameMenuController",["Gamelogic",function(Gamelogic){this.invertedState=Gamelogic.getInvertState(),this.saveGame=function(){Gamelogic.saveUserInformation()},this.loadGame=function(){Gamelogic.loadUserInformation()},this.resetGame=function(){Gamelogic.resetUserInformation()},this.invertColors=function(){this.invertedState="default"==this.invertedState?"inverted":"default",Gamelogic.flipInvertState()}}]),angular.module("incrementalgame").controller("IncrementalgameController",["$scope","$interval","Gamelogic",function($scope,$interval,Gamelogic){var Tiers=[{worker:{name:"worker 1",price:15,description:"was the first worker, gain 1 item per sec"},upgrade:[{name:"upgradeTier1 #1",price:50,description:"Was the first upgrade, x2 worker1 production"},{name:"upgradeTier1 #2",price:100,description:"Was the second upgrade, x4 worker1 production"}]},{worker:{name:"worker 2",price:15,description:"was the first worker, gain 5 item per sec"},upgrade:[{name:"upgradeTier2 #1",price:500,description:"Was the first upgrade, x2 worker2 production"},{name:"upgradeTier2 #2",price:1e3,description:"Was the second upgrade, x4 worker2 production"}]}];this.userInfo=Gamelogic.getUserInformation(),this.level=Tiers,this.produceWidget=function(){Gamelogic.increaseMoneyBy(1)},this.getWorkerCost=function(tier){return Tiers[tier].worker.price},this.getUpgradeLevel=function(tier){return Gamelogic.getUpgradeLevel(tier)},this.getUpgradeCost=function(tier){var upgradeLevel=Gamelogic.getUpgradeLevel(tier);return Tiers[tier].upgrade[upgradeLevel].price},this.getMoney=function(){return Gamelogic.getCurrentMoney()},this.buyWorker=function(tier){Gamelogic.decreaseMoneyBy(Tiers[tier].worker.price),Gamelogic.increaseWorkerCount(tier)},this.buyUpgrade=function(tier){Gamelogic.decreaseMoneyBy(Tiers[tier].upgrade[0].price),Gamelogic.increaseUpgradeLevel(tier)};var gameTick=$interval(function(){var workers=Gamelogic.getUserInformation();workers=workers.workers;var workerCount="",increaseValue="";angular.forEach(workers,function(value,key){0===key?(workerCount=Gamelogic.getWorkerCount(key),increaseValue=1*workerCount,Gamelogic.increaseMoneyBy(increaseValue)):1===key&&(workerCount=Gamelogic.getWorkerCount(key),increaseValue=5*workerCount,Gamelogic.increaseMoneyBy(increaseValue))})},1e3);$scope.$on("$destroy",function(){$interval.cancel(gameTick)})}]),angular.module("incrementalgame").factory("Gamelogic",[function(){var clickAPI={},UserInformation={currentMoney:0,workers:[0,0],upgrades:[0,0],settings:{color:"default"}};return clickAPI.saveUserInformation=function(){var UserInformationToSave=JSON.stringify(UserInformation);UserInformationToSave=btoa(UserInformationToSave),localStorage.setItem("userInfoObject",JSON.stringify(UserInformationToSave))},clickAPI.loadUserInformation=function(){var retrievedObject=localStorage.getItem("userInfoObject");if("undefined"!=typeof retrievedObject&&null!==retrievedObject){retrievedObject=JSON.parse(retrievedObject);var loadedUserInformation=atob(retrievedObject);loadedUserInformation=JSON.parse(loadedUserInformation),this.resetUserInformation(),UserInformation.currentMoney=loadedUserInformation.currentMoney,UserInformation.workers=loadedUserInformation.workers,UserInformation.upgrades=loadedUserInformation.upgrades,UserInformation.settings.color=loadedUserInformation.settings.color}else console.log("can't load item!")},clickAPI.getInvertState=function(){return UserInformation.settings.color},clickAPI.flipInvertState=function(){UserInformation.settings.color="default"==UserInformation.settings.color?"inverted":"default"},clickAPI.resetUserInformation=function(){UserInformation.currentMoney=0,UserInformation.workers=[0,0],UserInformation.upgrades=[0,0],UserInformation.settings.color="default"},clickAPI.getUserInformation=function(){return UserInformation},clickAPI.getCurrentMoney=function(){return UserInformation.currentMoney},clickAPI.getWorkerCount=function(workerNumber){return UserInformation.workers[workerNumber]},clickAPI.getUpgradeLevel=function(upgradeNumber){return UserInformation.upgrades[upgradeNumber]},clickAPI.increaseMoneyBy=function(moneyValue){UserInformation.currentMoney+=moneyValue},clickAPI.decreaseMoneyBy=function(moneyValue){UserInformation.currentMoney-=moneyValue},clickAPI.increaseWorkerCount=function(workerNumber){UserInformation.workers[workerNumber]+=1},clickAPI.increaseUpgradeLevel=function(upgradeNumber){UserInformation.upgrades[upgradeNumber]+=1},clickAPI}]);